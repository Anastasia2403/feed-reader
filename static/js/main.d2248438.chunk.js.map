{"version":3,"sources":["components/LoginPage/index.tsx","services/auth.ts","services/feed.ts","components/HomePage/index.tsx","components/Header/index.tsx","components/ FeedArticlesPage/index.tsx","App.tsx","index.tsx"],"names":["LoginPage","showPassword","setShowPassword","useState","username","setUsername","password","setPassword","navigate","useNavigate","_jsxs","className","children","_jsx","onSubmit","async","event","preventDefault","trim","length","data","axios","get","concat","login","then","localStorage","setItem","id","catch","toast","error","TextField","label","variant","type","required","value","onChange","target","InputProps","endAdornment","InputAdornment","position","IconButton","edge","onClick","handleTogglePasswordVisibility","Visibility","VisibilityOff","Button","BaseUrl","defaultFeeds","title","body","HomePage","feeds","setFeeds","storedFeeds","getItem","JSON","parse","open","setOpen","userId","useEffect","getFeedsList","stringify","getFeeds","Number","map","feed","handleClose","handleDeleteFeed","delete","deleteFeed","filter","success","Fab","color","size","handleAddFeed","AddIcon","Card","CardContent","Typography","gutterBottom","component","CardActions","handleLearnMore","feedUrl","encodeURIComponent","Dialog","onClose","PaperProps","form","formData","FormData","newFeed","undefined","reduce","a","b","Math","max","post","addFeed","DialogTitle","DialogContent","DialogContentText","autoFocus","margin","name","fullWidth","DialogActions","Header","_Fragment","Box","sx","flexGrow","AppBar","Toolbar","logoutClick","removeItem","FeedArticlesPage","useParams","parser","Parser","articles","setArticles","loading","setLoading","currentPage","setCurrentPage","indexOfLastArticle","indexOfFirstArticle","currentArticles","slice","CORS_PROXY","newArticles","parseURL","items","item","guid","link","pubDate","fetchFeed","Breadcrumbs","mb","Link","underline","href","CircularProgress","article","articleUrl","window","Pagination","count","ceil","page","handleChange","App","HashRouter","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render","React","StrictMode","ToastContainer"],"mappings":"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","file":"static/js/main.d2248438.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Button, IconButton, InputAdornment, TextField } from '@mui/material';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { login } from '../../services/auth';\nimport './LoginPage.css';\n\nexport const LoginPage = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleTogglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n  };\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (username.trim().length === 0 || password.trim().length === 0) {\n      toast.error('Login or password can not be empty');\n      return;\n    }\n\n    login()\n      .then((data) => {\n        localStorage.setItem('userId', data.id);\n        navigate('/');\n      })\n      .catch(() => {\n        toast.error('Something went wrong. Please try again,later!');\n      });\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <h1>Login Page</h1>\n      <h2>Please login to read a feed</h2>\n      <form className=\"loginForm\" onSubmit={handleSubmit}>\n        <TextField\n          id=\"username\"\n          label=\"Username\"\n          variant=\"outlined\"\n          type=\"text\"\n          required\n          value={username}\n          onChange={handleUsernameChange}\n        />\n        <TextField\n          id=\"password\"\n          label=\"Password\"\n          variant=\"outlined\"\n          type={showPassword ? 'text' : 'password'}\n          required\n          value={password}\n          onChange={handlePasswordChange}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  edge=\"end\"\n                  onClick={handleTogglePasswordVisibility}\n                  aria-label=\"toggle password visibility\"\n                >\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Button variant=\"contained\" type=\"submit\">\n          LOGIN\n        </Button>\n      </form>\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst BaseUrl = 'https://jsonplaceholder.typicode.com';\n\nexport const login = async () => {\n  const { data } = await axios.get(`${BaseUrl}/users/1`);\n  return data;\n};\n","import axios from 'axios';\nimport { Feed } from '../types/feed.type';\n\nconst BaseUrl = 'https://jsonplaceholder.typicode.com';\n\nexport const addFeed = async (feed: Feed) => {\n  const { data } = await axios.post(`${BaseUrl}/posts`, feed);\n  return data;\n};\n\nexport const getFeeds = async (userId: number) => {\n  const { data } = await axios.get(`${BaseUrl}/posts?userId=${userId}`);\n  return data;\n};\n\nexport const deleteFeed = async (id: number) => {\n  const { data } = await axios.delete(`${BaseUrl}/posts/${id}`);\n  return data;\n};\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Fab,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { Feed } from '../../types/feed.type';\nimport { addFeed, deleteFeed, getFeeds } from '../../services/feed';\nimport './HomePage.css';\n\nexport const defaultFeeds: Feed[] = [\n  {\n    id: 11,\n    title: 'NASA Breaking release news',\n    body: 'https://www.nasa.gov/news-release/feed/',\n  },\n  {\n    id: 12,\n    title: 'Reddit front page',\n    body: 'https://www.reddit.com/.rss',\n  },\n  {\n    id: 13,\n    title: 'Mobile World Live',\n    body: 'https://www.mobileworldlive.com/feed/',\n  },\n];\n\nexport const HomePage = () => {\n  const [feeds, setFeeds] = useState<Feed[]>(() => {\n    const storedFeeds = localStorage.getItem('feeds');\n    return storedFeeds ? JSON.parse(storedFeeds) : defaultFeeds;\n  });\n  const [open, setOpen] = useState(false);\n  const navigate = useNavigate();\n  const userId = localStorage.getItem('userId');\n\n  useEffect(() => {\n    getFeedsList();\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('feeds', JSON.stringify(feeds));\n  }, [feeds]);\n\n  const getFeedsList = () => {\n    getFeeds(Number(userId))\n      .then((data) => {\n        data.map((feed: Feed) => {\n          if (feed.id && feed.id > 10) {\n            setFeeds([...feeds, feed]);\n          }\n        });\n      })\n      .catch(() => {\n        toast.error('Error fetching feeds');\n      });\n  };\n\n  const handleLearnMore = (feedUrl: string) => {\n    navigate(`/feed/${encodeURIComponent(feedUrl)}`);\n  };\n\n  const handleClose = () => setOpen(false);\n  const handleAddFeed = () => setOpen(true);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const form = event.target as HTMLFormElement;\n    const formData = new FormData(form);\n    const title = formData.get('name') as string;\n    const body = formData.get('url') as string;\n    const newFeed = {\n      userId: Number(userId),\n      title,\n      body,\n    };\n\n    const id =\n      (feeds\n        .map((feed) => feed?.id)\n        .filter((id) => id !== undefined)\n        .reduce((a, b) => Math.max(a as number, b as number), 0) || 0) + 1;\n\n    addFeed(newFeed)\n      .then(() => {\n        setFeeds([...feeds, { ...newFeed, id: id }]);\n        toast.success('Success adding feed');\n      })\n      .catch(() => {\n        toast.error('Error adding feed');\n      });\n\n    handleClose();\n  };\n\n  const handleDeleteFeed = (id: number) => {\n    deleteFeed(id)\n      .then(() => {\n        setFeeds(feeds.filter((feed) => feed.id !== id));\n        toast.success('Success deleting feed');\n      })\n      .catch(() => {\n        toast.error('Error deleting feed');\n      });\n  };\n\n  return (\n    <div className=\"homeContainer\">\n      <div className=\"feedHeader\">\n        <h1 className=\"feedTitle\">All feeds</h1>\n        <Fab\n          color=\"primary\"\n          aria-label=\"add\"\n          size=\"small\"\n          onClick={handleAddFeed}\n        >\n          <AddIcon />\n        </Fab>\n      </div>\n      <div className={'list'}>\n        {feeds.map((feed) => (\n          <Card className=\"feedItem\" key={feed.id}>\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {feed.title}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button\n                size=\"small\"\n                onClick={() => handleDeleteFeed(feed.id as number)}\n              >\n                Delete\n              </Button>\n              <Button size=\"small\" onClick={() => handleLearnMore(feed.body)}>\n                Learn More\n              </Button>\n            </CardActions>\n          </Card>\n        ))}\n      </div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          component: 'form',\n          onSubmit: handleSubmit,\n        }}\n      >\n        <DialogTitle>Add new feed</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To add a new feed, please enter the name and URL below.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            required\n            margin=\"dense\"\n            id=\"name\"\n            name=\"name\"\n            label=\"Feed Name\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n          />\n          <TextField\n            required\n            margin=\"dense\"\n            id=\"url\"\n            name=\"url\"\n            label=\"Feed URL\"\n            type=\"url\"\n            fullWidth\n            variant=\"standard\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button type=\"submit\">Add feed</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from 'react';\nimport { AppBar, Box, Toolbar, Typography, Button } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\n\nexport const Header = () => {\n  const navigate = useNavigate();\n  const userId = localStorage.getItem('userId');\n\n  const logoutClick = () => {\n    localStorage.removeItem('userId');\n    navigate('/login');\n  };\n\n  return (\n    <>\n      {userId && (\n        <Box sx={{ flexGrow: 1 }}>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                Feed reader\n              </Typography>\n              <Button color=\"inherit\" onClick={logoutClick}>\n                Logout\n              </Button>\n            </Toolbar>\n          </AppBar>\n        </Box>\n      )}\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport Parser from 'rss-parser';\nimport { toast } from 'react-toastify';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n  CircularProgress,\n  Breadcrumbs,\n  Link,\n  Pagination,\n} from '@mui/material';\nimport { Article } from '../../types/article.type';\nimport './FeedArticlesPage.css';\n\nexport const FeedArticlesPage = () => {\n  const { feedUrl } = useParams();\n  const parser = new Parser();\n  const [articles, setArticles] = useState<Article[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const articlesPerPage = 9;\n  const indexOfLastArticle = currentPage * articlesPerPage;\n  const indexOfFirstArticle = indexOfLastArticle - articlesPerPage;\n  const currentArticles = articles.slice(\n    indexOfFirstArticle,\n    indexOfLastArticle,\n  );\n\n  useEffect(() => {\n    const fetchFeed = async () => {\n      try {\n        const CORS_PROXY = 'https://cors-anywhere.herokuapp.com/';\n        const feed = await parser.parseURL(CORS_PROXY + feedUrl);\n        const newArticles = feed.items.map((item) => ({\n          id: item.guid,\n          title: item.title,\n          link: item.link,\n          pubDate: item.pubDate,\n        }));\n\n        setArticles(newArticles);\n      } catch (error) {\n        toast.error('Error fetching feed articles');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchFeed();\n  }, [feedUrl]);\n\n  const handleLearnMore = (articleUrl: string) => {\n    window.open(articleUrl, '_blank');\n  };\n\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\n    setCurrentPage(value);\n  };\n\n  return (\n    <div className=\"homeContainer\">\n      <Breadcrumbs aria-label=\"breadcrumb\" sx={{ mb: 2 }}>\n        <Link underline=\"hover\" color=\"inherit\" href=\"/\">\n          Feeds\n        </Link>\n        <Typography color=\"text.primary\">Articles</Typography>\n      </Breadcrumbs>\n      <h1>Feed Articles</h1>\n      <div className=\"centeredContainer\">\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <div className={'list'}>\n            {currentArticles.map((article) => (\n              <Card className=\"feedItem\" key={article.id}>\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"div\">\n                    {article.title}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {article.pubDate}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    size=\"small\"\n                    onClick={() => handleLearnMore(article.link as string)}\n                  >\n                    Learn More\n                  </Button>\n                </CardActions>\n              </Card>\n            ))}\n          </div>\n        )}\n      </div>\n      <Pagination\n        className=\"pagination\"\n        count={Math.ceil(articles.length / articlesPerPage)}\n        page={currentPage}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Routes, Route, HashRouter } from 'react-router-dom';\nimport { LoginPage } from './components/LoginPage';\nimport { HomePage } from './components/HomePage';\nimport { Header } from './components/Header';\nimport { FeedArticlesPage } from './components/ FeedArticlesPage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Header />\n        <Routes>\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/feed/:feedUrl\" element={<FeedArticlesPage />} />\n        </Routes>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n    <ToastContainer />\n  </React.StrictMode>,\n);\n"],"sourceRoot":""}